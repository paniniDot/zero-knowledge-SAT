@article{pinocchio,
  author = {Parno and Howell and Gentry and Raykova},
  title = {Pinocchio: Nearly Practical Verifiable Computation},
  year = {2013},
  url = {https://eprint.iacr.org/2013/279.pdf}
}

@inproceedings{sonic,
author = {Maller, Mary and Bowe, Sean and Kohlweiss, Markulf and Meiklejohn, Sarah},
title = {Sonic: Zero-Knowledge SNARKs from Linear-Size Universal and Updatable Structured Reference Strings},
year = {2019},
isbn = {9781450367479},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi-org.ezproxy.unibo.it/10.1145/3319535.3339817},
doi = {10.1145/3319535.3339817},
abstract = {Ever since their introduction, zero-knowledge proofs have become an important tool for addressing privacy and scalability concerns in a variety of applications. In many systems each client downloads and verifies every new proof, and so proofs must be small and cheap to verify. The most practical schemes require either a trusted setup, as in (pre-processing) zk-SNARKs, or verification complexity that scales linearly with the complexity of the relation, as in Bulletproofs. The structured reference strings required by most zk-SNARK schemes can be constructed with multi-party computation protocols, but the resulting parameters are specific to an individual relation. Groth et al. discovered a zk-SNARK protocol with a universal structured reference string that is also updatable, but the string scales quadratically in the size of the supported relations.Here we describe a zero-knowledge SNARK, Sonic, which supports a universal and continually updatable structured reference string that scales linearly in size. We also describe a generally useful technique in which untrusted "helpers" can compute advice that allows batches of proofs to be verified more efficiently. Sonic proofs are constant size, and in the "helped" batch verification context the marginal cost of verification is comparable with the most efficient SNARKs in the literature.},
booktitle = {Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security},
pages = {2111–2128},
numpages = {18},
keywords = {updatability, zero-knowledge proofs},
location = {London, United Kingdom},
series = {CCS '19}
}

@inproceedings{bulletproofs,
issn = {1081-6011},
abstract = {We propose Bulletproofs, a new non-interactive zero-knowledge proof protocol with very short proofs and without a trusted setup; the proof size is only logarithmic in the witness size. Bulletproofs are especially well suited for efficient range proofs on committed values: they enable proving that a committed value is in a range using only 2 log_2(n)+9 group and field elements, where n is the bit length of the range. Proof generation and verification times are linear in n. Bulletproofs greatly improve on the linear (in n) sized range proofs in existing proposals for confidential transactions in Bitcoin and other cryptocurrencies. Moreover, Bulletproofs supports aggregation of range proofs, so that a party can prove that m commitments lie in a given range by providing only an additive O(log(m)) group elements over the length of a single proof. To aggregate proofs from multiple parties, we enable the parties to generate a single proof without revealing their inputs to each other via a simple multi-party computation (MPC) protocol for constructing Bulletproofs. This MPC protocol uses either a constant number of rounds and linear communication, or a logarithmic number of rounds and logarithmic communication. We show that verification time, while asymptotically linear, is very efficient in practice. The marginal cost of batch verifying 32 aggregated range proofs is less than the cost of verifying 32 ECDSA signatures. Bulletproofs build on the techniques of Bootle et al. (EUROCRYPT 2016). Beyond range proofs, Bulletproofs provide short zero-knowledge proofs for general arithmetic circuits while only relying on the discrete logarithm assumption and without requiring a trusted setup. We discuss many applications that would benefit from Bulletproofs, primarily in the area of cryptocurrencies. The efficiency of Bulletproofs is particularly well suited for the distributed and trustless nature of blockchains. The full version of this article is available on ePrint.},
pages = {315--334},
volume = {2018-},
publisher = {IEEE},
booktitle = {2018 IEEE Symposium on Security and Privacy (SP)},
isbn = {1538643529},
year = {2018},
title = {Bulletproofs: Short Proofs for Confidential Transactions and More},
author = {Bunz, Benedikt and Bootle, Jonathan and Boneh, Dan and Poelstra, Andrew and Wuille, Pieter and Maxwell, Greg},
}

@book{modern_crypto,
  author = {Bellare and Rogaway},
  title = {Introduction to Modern Cryptography},
  year = {2005},
  url = {https://web.cs.ucdavis.edu/~rogaway/classes/227/spring05/book/main.pdf}
}

@article{micali,
  author = {Shafi, Goldwass and Silvio, Micali and Charles, Rackof}, 
  title = {The Knowledge Complexity of Interactive Proof-System},
  year = {1989},
  issn = {0097-5397},
  publisher = {Society for Industrial and Applied Mathematics},
  address = {Philadelphia, PA},
  pages = {186-208},
  journal = {SIAM journal on computing},
  volume = {18},
  number = {1},
  abstract = {Usually, a proof of a theorem contains more knowledge than the mere fact that the theorem is true. For instance, to prove that a graph is Hamiltonian it suffices to exhibit a Hamiltonian tour in it; however, this seems to contain more knowledge than the single bit Hamiltonian/non-Hamiltonian. In this paper a computational complexity theory of the "knowledge" contained in a proof is developed. Zero-knowledge proofs are defined as those proofs that convey no additional knowledge other than the correctness of the proposition in question. Examples of zero-knowledge proof systems are given for the languages of quadratic residuosity and 'quadratic nonresiduosity. These are the first examples of zero-knowledge proofs for languages not known to be efficiently recognizable.},
  url = {https://www.proquest.com/docview/919784312?parentSessionId=UTylY%2BoE6DtDfIz4SXIO8JL9nL1xWIeL41xX2nRuM5s%3D&pq-origsite=primo&accountid=9652},
}

@article{ipeqpspace,
  author = {Jonathan, Katz},
  title = {Notes on Complexity Theory, Lecture 19},
  year = {2011},
  url = {https://www.cs.umd.edu/~jkatz/complexity/f11/lecture19.pdf}
}

@article{cse200,
  author = {Shachar, Lovett},
  title = {CSE200: Complexity theory Interactive proofs},
  year = {2020},
  url = {https://cseweb.ucsd.edu/classes/wi20/cse200-a/notes/9-interactive\%20proofs.pdf}
}

@inproceedings{identification,
author = {Fiat, Amos and Shamir, Adi},
editor = {Odlyzko, Andrew M.},
title = {How to Prove Yourself: Practical Solutions to Identification and Signature Problems},
booktitle = {Advances in Cryptology --- CRYPTO' 86},
year = {1987},
isbn = {0387180478},
publisher = {pringer Berlin Heidelberg},
address = {Berlin, Heidelberg},
abstract = {In this paper we describe simple identification and signature schemes which enable any user to prove his identity and the authenticity of his messages to any other user without shared or public keys. The schemes are provably secure against any known or chosen message attack if factoring is difficult, and typical implementations require only 1\% to 4\% of the number of modular multiplications required by the RSA scheme. Due to their simplicity, security and speed, these schemes are ideally suited for microprocessor-based devices such as smart cards, personal computers, and remote control systems.},
booktitle = {Proceedings on Advances in Cryptology---CRYPTO '86},
pages = {186–194},
numpages = {9},
location = {Santa Barbara, California, USA},
url = {https://link.springer.com/content/pdf/10.1007/3-540-47721-7_12.pdf}
}

@inproceedings{noninteractive,
author = {Blum, Manuel and Feldman, Paul and Micali, Silvio},
title = {Non-Interactive Zero-Knowledge and Its Applications},
year = {1988},
isbn = {0897912640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://people.csail.mit.edu/silvio/Selected%20Scientific%20Papers/Zero%20Knowledge/Noninteractive_Zero-Knowkedge.pdf},
abstract = {We show that interaction in any zero-knowledge proof can be replaced by sharing a common, short, random string. We use this result to construct the first public-key cryptosystem secure against chosen ciphertext attack.},
booktitle = {Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing},
pages = {1084-1118},
numpages = {35},
location = {Chicago, Illinois, USA},
series = {STOC '88}
}

@inproceedings{zksnarks,
author = {Bitansky, Nir and Canetti, Ran and Chiesa, Alessandro and Tromer, Eran},
title = {From Extractable Collision Resistance to Succinct Non-Interactive Arguments of Knowledge, and Back Again},
year = {2012},
isbn = {9781450311151},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi-org.ezproxy.unibo.it/10.1145/2090236.2090263},
doi = {10.1145/2090236.2090263},
abstract = {The existence of succinct non-interactive arguments for NP (i.e., non-interactive computationally-sound proofs where the verifier's work is essentially independent of the complexity of the NP nondeterministic verifier) has been an intriguing question for the past two decades. Other than CS proofs in the random oracle model [Micali, FOCS '94], the only existing candidate construction is based on an elaborate assumption that is tailored to a specific protocol [Di Crescenzo and Lipmaa, CiE '08].We formulate a general and relatively natural notion of an extractable collision-resistant hash function (ECRH) and show that, if ECRHs exist, then a modified version of Di Crescenzo and Lipmaa's protocol is a succinct non-interactive argument for NP. Furthermore, the modified protocol is actually a succinct non-interactive adaptive argument of knowledge (SNARK). We then propose several candidate constructions for ECRHs and relaxations thereof.We demonstrate the applicability of SNARKs to various forms of delegation of computation, to succinct non-interactive zero knowledge arguments, and to succinct two-party secure computation. Finally, we show that SNARKs essentially imply the existence of ECRHs, thus demonstrating the necessity of the assumption.},
booktitle = {Proceedings of the 3rd Innovations in Theoretical Computer Science Conference},
pages = {326–349},
numpages = {24},
location = {Cambridge, Massachusetts},
series = {ITCS '12}
}